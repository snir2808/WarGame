{"version":3,"sources":["media/WhatsApp Audio 2021-02-21 at 12.53.08.mp4","media/nicubunu_Ornamental_deck_2_of_spades (1).svg","media/nicubunu_Ornamental_deck_3_of_spades.svg","media/nicubunu_Ornamental_deck_4_of_spades.svg","media/nicubunu_Ornamental_deck_5_of_spades.svg","media/nicubunu_Ornamental_deck_6_of_spades.svg","media/nicubunu_Ornamental_deck_7_of_spades.svg","media/nicubunu_Ornamental_deck_8_of_spades.svg","media/nicubunu_Ornamental_deck_9_of_spades.svg","media/nicubunu_Ornamental_deck_10_of_spades.svg","media/nicubunu_Ornamental_deck_Jack_of_spades.svg","media/nicubunu_Ornamental_deck_Queen_of_spades.svg","media/nicubunu_Ornamental_deck_King_of_spades.svg","media/nicubunu_Ornamental_deck_Ace_of_spades.svg","media/nicubunu_Card_backs_grid_red_preview_3d99.png","Game.jsx","Home.jsx","End.jsx","App.js","reportWebVitals.js","index.js"],"names":["Game","props","useSound","sound","play","useState","display","secStyle","setSecStyle","style","setStyle","newPlayer","player","setPlayer","playerCards","setPlayerCards","newCom","comCards","setComCards","cunter","setCunter","comScore","setComScore","playerScore","setPlayerScore","card","aIcardDisplay","setAIcardDisplay","palyercardDisplay","setPlayercardDisplay","open","setOpen","history","useHistory","cardForCom","computer","className","src","name","Button","onClick","console","log","result","cards","card_2","card_3","card_4","card_5","card_6","card_7","card_8","card_9","card_10","card_11","card_12","card_13","card_14","numberOfWin","numberOfLose","numberOfGame","score","push","variant","closeOnDocumentClick","Home","setComCrad","classes","makeStyles","theme","root","margin","spacing","width","useStyles","num","comCrards","noValidate","autoComplete","TextField","onChange","e","target","value","id","label","i","j","sort","Math","random","splice","cardFunc","undefined","alert","infoFunc","End","button","color","keepPlay","App","comCard","newcomCrards","newplayerCards","results","takeInfo","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0049991f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/WhatsApp Audio 2021-02-21 at 12.53.08.2ba7a01c.mp4\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_2_of_spades (1).76a68216.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_3_of_spades.d6e800f6.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_4_of_spades.557cb949.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_5_of_spades.23633ea0.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_6_of_spades.2f41752d.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_7_of_spades.6a2a67be.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_8_of_spades.035ee273.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_9_of_spades.4f14bc59.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_10_of_spades.40984afb.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_Jack_of_spades.4ba9a570.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_Queen_of_spades.37af97ad.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_King_of_spades.f6f94b33.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Ornamental_deck_Ace_of_spades.6c63942b.svg\";","export default __webpack_public_path__ + \"static/media/nicubunu_Card_backs_grid_red_preview_3d99.a1422137.png\";","import React, {useState} from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport useSound from 'use-sound';\r\nimport sound from './media/WhatsApp Audio 2021-02-21 at 12.53.08.mp4'\r\nimport card_2 from './media/nicubunu_Ornamental_deck_2_of_spades (1).svg'\r\nimport card_3 from './media/nicubunu_Ornamental_deck_3_of_spades.svg'\r\nimport card_4 from './media/nicubunu_Ornamental_deck_4_of_spades.svg'\r\nimport card_5 from './media/nicubunu_Ornamental_deck_5_of_spades.svg'\r\nimport card_6 from './media/nicubunu_Ornamental_deck_6_of_spades.svg'\r\nimport card_7 from './media/nicubunu_Ornamental_deck_7_of_spades.svg'\r\nimport card_8 from './media/nicubunu_Ornamental_deck_8_of_spades.svg'\r\nimport card_9 from './media/nicubunu_Ornamental_deck_9_of_spades.svg'\r\nimport card_10 from './media/nicubunu_Ornamental_deck_10_of_spades.svg'\r\nimport card_11 from './media/nicubunu_Ornamental_deck_Jack_of_spades.svg'\r\nimport card_12 from './media/nicubunu_Ornamental_deck_Queen_of_spades.svg'\r\nimport card_13 from './media/nicubunu_Ornamental_deck_King_of_spades.svg'\r\nimport card_14 from './media/nicubunu_Ornamental_deck_Ace_of_spades.svg'\r\nimport card from './media/nicubunu_Card_backs_grid_red_preview_3d99.png'\r\n\r\n\r\nexport default function Game(props) {\r\n    const [play] = useSound(sound);\r\n\r\n    //סטייט שאחרי להסתרת הקלפים עד ללחיצה ראשונית\r\n    const [secStyle, setSecStyle] =useState({display:'block'})\r\n    //סטייט שמציג את הקלפים לאחר לחיצה ראשונית\r\n    const [ style, setStyle] = useState({display: 'none'})\r\n    //סטייס שמחזיק את מערך השחקן בפעם הראשונה שמשחק\r\n    const [player, setPlayer] = useState(props.newPlayer)\r\n    // סטייט שמחזיק את מערך הקלפים של המשתמש\r\n    const [playerCards, setPlayerCards] = useState(0)\r\n    // סטייט שמחזיק את מערך הקלפים של המחשב\r\n    const [comCards, setComCards] = useState(props.newCom)\r\n    // סטייט שסופר את מספר הסיבובים שנעשו במשחק (הוא גם משמש לעבור על כל תא במערך לפי הסדר)\r\n    const [cunter, setCunter] = useState(0)\r\n    // סטייט שמחשב כמות נקודות בכל פעם שמחשב מנצח בסיבוב\r\n    const [comScore, setComScore] = useState(0)\r\n    //סטייט שמחשב כמות נקודות בכל פעם שהמשתמש מנצח\r\n    const [playerScore, setPlayerScore] = useState(0)\r\n    // סטייט שמחזיק את תמונות הקלפים\r\n    const [aIcardDisplay, setAIcardDisplay]= useState(card)\r\n    const [palyercardDisplay, setPlayercardDisplay]= useState(card)\r\n    const [open, setOpen] = useState(false);\r\n\r\n\r\n\r\n    const history = useHistory()\r\n// הכנסת חבילת קלפים חדשה למחשב (קורה רק מהמשחק השני כדי לא לקבל שגיאה שיש ערך ריק)\r\n    let cardForCom = props.newCom\r\n//תנאי שמציל את הקוד במקרה שמגיע מערך ריק מהסיבוב השני\r\n        if(props.newCom == 0){\r\n            cardForCom = props.computer\r\n        }\r\n        let openModal = ()=>{\r\n            setOpen(true)\r\n            play()\r\n            // setTimeout(() => {\r\n            //     setOpen(false)\r\n            // }, 5000);\r\n        }\r\n\r\n        //פונקציה שאחראית לניהול המשחק \r\n    let next = () => {\r\n        console.log(props.newCom)\r\n        setSecStyle({display: 'none'})\r\n        setStyle({display:'block'})\r\n        //תנאי שפעיל מהסיבוב השני מכיוון שסטייט מתאפס ברינדור אז אני נותן לו ערך המשכי \r\n        if(player == 0){\r\n            setPlayer(props.player)\r\n        }\r\n        //משתנה שמשמש אותי לשמור תוצאות המשחק במקום להיסתבך עם עריכת סטייט\r\n        let result = 0\r\n        //הכנסת קליפים אחד אחד למשחק למשתמש ולמחשב\r\n        setPlayerCards( props.player.cards[cunter])\r\n        setComCards(cardForCom[cunter])\r\n        switch (cardForCom[cunter]) {\r\n            case 1:\r\n                setAIcardDisplay(card_2)\r\n                break;\r\n              case 2:\r\n                setAIcardDisplay(card_3)\r\n                break;\r\n              case 3:\r\n                setAIcardDisplay(card_4)\r\n                break;\r\n              case 4:\r\n                setAIcardDisplay(card_5)\r\n                break;\r\n              case 5:\r\n                setAIcardDisplay(card_6)\r\n                break;\r\n              case 6:\r\n                setAIcardDisplay(card_7)\r\n                break;\r\n              case  7:\r\n                setAIcardDisplay(card_8)\r\n                break;\r\n              case  8:\r\n                setAIcardDisplay(card_9)\r\n                break;\r\n              case  9:\r\n                setAIcardDisplay(card_10)\r\n                break;\r\n              case  10:\r\n                setAIcardDisplay(card_11)\r\n                break;\r\n              case  11:\r\n                setAIcardDisplay(card_12)\r\n                break;\r\n              case  12:\r\n                setAIcardDisplay(card_13)\r\n                break;\r\n              case  13:\r\n                setAIcardDisplay(card_14)\r\n                break;\r\n        }\r\n\r\n        switch (props.player.cards[cunter]) {\r\n            case 1:\r\n                setPlayercardDisplay(card_2)\r\n                break;\r\n              case 2:\r\n                setPlayercardDisplay(card_3)\r\n                break;\r\n              case 3:\r\n                setPlayercardDisplay(card_4)\r\n                break;\r\n              case 4:\r\n                setPlayercardDisplay(card_5)\r\n                break;\r\n              case 5:\r\n                setPlayercardDisplay(card_6)\r\n                break;\r\n              case 6:\r\n                setPlayercardDisplay(card_7)\r\n                break;\r\n              case  7:\r\n                setPlayercardDisplay(card_8)\r\n                break;\r\n              case  8:\r\n                setPlayercardDisplay(card_9)\r\n                break;\r\n              case  9:\r\n                setPlayercardDisplay(card_10)\r\n                break;\r\n              case  10:\r\n                setPlayercardDisplay(card_11)\r\n                break;\r\n              case  11:\r\n                setPlayercardDisplay(card_12)\r\n                break;\r\n              case  12:\r\n                setPlayercardDisplay(card_13)\r\n                break;\r\n              case  13:\r\n                setPlayercardDisplay(card_14)\r\n                break;\r\n        }\r\n\r\n        //תנאי שבודק מי ניצח בסיבוב הנוכחי\r\n        if(comCards > playerCards){\r\n            \r\n            setComScore(comScore +1)\r\n            \r\n        }else if(comCards < playerCards){\r\n            \r\n            setPlayerScore(playerScore +1)\r\n        }\r\n        if(props.player.cards[cunter] == cardForCom[cunter] && comCards !== 0){\r\n          console.log(playerCards[cunter])\r\n          console.log(comCards[cunter])\r\n            openModal()\r\n        }\r\n        setCunter(cunter +1)\r\n        // משתנה שיעזור לי לערוך את האובייקט בצורה נוחה כולל היסטוריה משחקים \r\n        var newPlayer = player\r\n        //חלק זה אחראי על בדיקת מנצח בכל משחק ומעדכן את אובייקט המשתמש בהתאם\r\n        if(cunter >= 25){\r\n            if(playerScore > comScore ){\r\n                result = {\r\n                    name: props.player.name,\r\n                    numberOfWin: newPlayer.numberOfWin +1,\r\n                    numberOfLose: newPlayer.numberOfLose, numberOfGame:newPlayer.numberOfGame +1,\r\n                    cards: props.player.cards\r\n                }\r\n            }else if(playerScore < comScore){\r\n                result = {\r\n                    name: newPlayer.name, \r\n                    numberOfWin: newPlayer.numberOfWin,\r\n                    numberOfLose: newPlayer.numberOfLose +1,\r\n                    numberOfGame:newPlayer.numberOfGame +1,\r\n                    cards: props.player.cards\r\n                }\r\n            }else{\r\n                //חלק זה אחראי על כמות ניצחונות זהה בין השחקן למחשב. במקרה כזה השחקן עדיין הפסיד\r\n                result = {\r\n                    name: newPlayer.name, \r\n                    numberOfWin: newPlayer.numberOfWin, \r\n                    numberOfLose: newPlayer.numberOfLose +1, numberOfGame: newPlayer.numberOfGame +1,\r\n                    cards: props.player.cards\r\n                }\r\n            }\r\n            //דגל לוודא שאכן עודכן המערך של השחקן \r\n            if(result != 0){\r\n            props.score(result)\r\n            history.push('/end')\r\n           }\r\n        }\r\n    }\r\n    return (\r\n        <div className = 'game'>\r\n            <h1 className='gameName'>AI</h1>\r\n            <p style={secStyle}></p>\r\n            \r\n            <p  style={style}><img src={aIcardDisplay}/></p>\r\n            <p style={style}><img src={palyercardDisplay}/></p>\r\n            <p style={secStyle}></p>\r\n            <h1 className='gameName'>{props.player.name}</h1>\r\n            <Button onClick={next} variant=\"contained\">GO!</Button>\r\n            <Popup open={open} closeOnDocumentClick >\r\n        <div>\r\n\r\n        <h1 className= 'rforw1'>WAR!</h1>\r\n        </div>\r\n      </Popup>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useHistory} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function Home(props) {\r\n\r\n    const history = useHistory()\r\n    const [cards, setCards] = useState([])\r\n    const [comCard, setComCrad] =useState([])\r\n    const [player, setPlayer] =useState()\r\n    const [playerCards, setPlayerCards] =useState([])\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\nconst classes = useStyles();\r\n\r\n//שני המשתנים האלו משמשים אותי להעברה של מידע ופעולות חשבון כי סטייט לא פועל כראוי\r\n    var num = []\r\n    var comCrards = []\r\n    //פונקציה ליצירת חבילת קלפים כולל עירבוב שלהם וכולל חלוקה מדוייקת לשני שחקנים\r\n    let cardFunc = () =>{\r\n        for(let i = 1;i < 14;i++){\r\n          for(let j = 0;j < 4 ;j++){\r\n            num.push(i)\r\n          }\r\n        }\r\n        //פעולת מיון שמערבבת נתונים במערך\r\n        num.sort(() => Math.random() - 0.5);\r\n        for(let i = 0;i < 26;i++){\r\n          comCrards.push(num[i])\r\n        }\r\n        setComCrad(comCrards)\r\n        for(let i = 0;i < 26 ;i++){\r\n          num.splice(i,1)\r\n        }\r\n        setPlayerCards(num)\r\n      }\r\n      //פונקציה שמכניסה את שם השחקן לתוך סטייט \r\n      let playerName = (e) =>{\r\n        let name = e.target.value\r\n         setPlayer(name)\r\n      }\r\n      //פונקציה שבודק אם הוכנס ערך לשדה הכתיבה. במידה וכן שולחת פקודה ליצירת אובייקט משתמש חדש\r\n      let validName = () =>{\r\n        if(player == undefined){\r\n          alert('bla bla bla')\r\n        }else{\r\n          props.infoFunc(player,comCrards,num)\r\n          //היסטורי משמש אותי להעברה לערוץ אחר ללא צורך בלחיצה פיזית \r\n          history.push('/game')\r\n        }\r\n      }\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n         <h1 className='rforw'>ReadY FoR WaR ? </h1>\r\n          <form className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField onChange={playerName} id=\"filled-basic\" label=\"Name\" variant=\"filled\" />\r\n    </form>\r\n      <Button  onClick={()=>{cardFunc();validName();}} variant=\"contained\">start</Button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default function End(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      button: {\r\n        color:'#73706C',\r\n      },\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n    const history = useHistory()\r\n\r\n    //שוב פונקציה ומשתנים שאחראים על חילוק הקלפים מחדש ושליחת השחקן למשחק נוסף\r\n    var num = []\r\n    var comCrards = []\r\n    let cardFunc = () =>{\r\n        for(let i = 1;i < 14;i++){\r\n          for(let j = 0;j < 4 ;j++){\r\n            num.push(i)\r\n          }\r\n        }\r\n        num.sort(() => Math.random() - 0.5);\r\n        for(let i = 0;i < 26;i++){\r\n          comCrards.push(num[i])\r\n        }\r\n        for(let i = 0;i < 26 ;i++){\r\n          num.splice(i,1)\r\n        }\r\n        props.player.cards = num\r\n        props.keepPlay(comCrards, props.player)\r\n        console.log(comCrards)\r\n        console.log(num)\r\n          history.push('/game')\r\n      }\r\n\r\n    return (\r\n        <div>\r\n            <h1><span className='lose'>LOSE</span><span className='win' style ={{color: 'black'}}> \\</span>  <span className='win'>WIN</span></h1>\r\n            <h2 style={{color: 'white'}}>{props.player.numberOfLose}  -  {props.player.numberOfWin}</h2>\r\n            <Button className={classes.button} onClick={cardFunc} variant=\"contained\">Again?</Button>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React, {useState} from 'react'\nimport { HashRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport Game from './Game'\nimport Home from './Home'\nimport End from './End'\n\n\nfunction App() {\n//סטייט לשימוש שמירה של קלפים למחשב\n  const [comCard, setComCrad] =useState([]);\n  //סטייט לשמירה של משתמש חדש(יש רק משתמש אחד)\n  const [player, setPlayer] =useState();\n  //סטייט לשמירה של משחק חוזר (מעגל זיכרון לשמירת תוצאות של משחקים)\n  const [playerAfterGame, setPlayerAfterGame] =useState('');\n  //משתנה לקבלת חבילת קלפים חדשה למחשב\n  var newcomCrards = 0\n  var newplayerCards = 0\n  //משתנה להעברה של נתונים לקומפננטה מכיוון שסטייט לא אמין בהעברת מידע\n  var results = 0\n  //פונקציה חוזרת להבערת מידע להמשך משחקים \n  let getInfoFormHome = (player,comCard,playerCards) => {\n    setPlayer({name: player, numberOfWin: 0, numberOfLose: 0, numberOfGame:0,cards: playerCards})\n    setComCrad(comCard)\n  }\n//פונקציה שמעבירה את אובייקט המשתמש לאחר שמירה של נתונים מהמשחק האחרון \n  let takeInfo = (player) =>{\n    results = player\n  }\n//פונקציה ששומרת קלפים חדשים למשחק הבא\n  let keepPlay = (comCrards,playerCards) =>{\n    newcomCrards = comCrards;\n    newplayerCards = playerCards;\n  }\n\n  return (\n    <div className=\"App\">\n    <Router>\n        <Switch>\n        <Route exact path = '/' >\n           <Home infoFunc = {getInfoFormHome}/>\n          </Route>\n          <Route path = '/game' \n          component ={()=>{return(\n          <Game\n          newCom ={newcomCrards}\n          newPlayer = {newplayerCards}\n          score = {takeInfo} \n          player ={player}\n          computer = {comCard}\n          />)}}>\n            </Route>\n            <Route path='/end' component={()=>{return(<End keepPlay={keepPlay} player ={results}/>)}}></Route> \n        </Switch>\n      </Router>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}